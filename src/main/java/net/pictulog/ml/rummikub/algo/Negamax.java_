package net.pictulog.ml.rummikub.algo;

import org.w3c.dom.Node;

import net.pictulog.ml.rummikub.model.Game;
import net.pictulog.ml.rummikub.model.Player;

/**
 * cf https://en.wikipedia.org/wiki/Negamax
 * 
 * @author rostskadat
 *
 */
public class Negamax {

    public double negamax(Game game, Node node, int depth, Player player) {
        if (depth == 0 || game.isEnd()) {
            return game.evaluate(player);
        }

        for (node in game.possibleActions(player)) {
            game.make_move(player, move)
            curr_move, curr_score = negamax(depth-1, cg.get_next_player(player));
            curr_score = -curr_score
            if max_score is None or curr_score > max_score:
                max_move, max_score = move, curr_score
            cg.undo_move(player, move)
        }
        return max_move, max_score;
    }

    public void negaMaxABPruning() {
        // NA
    }

    public void probabilisticNegaMax() {
        // NA
    }

    public void probabilisticNegaMaxABPruning() {
        // NA
    }
}
